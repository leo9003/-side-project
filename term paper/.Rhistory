scale_x_continuous(breaks = 0:24)
# 計算夜間與非夜間的傷亡人數總和
nighttime_data <- data_clean %>%
group_by(夜間) %>%
summarise(Average_Casualties = mean(死傷人數, na.rm = TRUE))
# 繪製夜間與日間直方圖
ggplot(nighttime_data, aes(x = as.factor(夜間), y = Average_Casualties, fill = as.factor(夜間))) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Average Casualties by Nighttime",
x = "Nighttime (1 = Yes, 0 = No)",
y = "Average Casualties",
fill = "Nighttime"
) +
theme_minimal() +
scale_fill_manual(values = c("0" = "skyblue", "1" = "darkblue"),
labels = c("0" = "Daytime", "1" = "Nighttime"))
# 確保 '發生月' 為數值型別
data_clean$發生月 <- as.numeric(data_clean$發生月)
# 計算每月死傷人數總和
monthly_data <- data_clean %>%
group_by(發生月) %>%
summarise(total_casualties = sum(死傷人數, na.rm = TRUE))
# 繪製每月折線圖
ggplot(monthly_data, aes(x = 發生月, y = total_casualties)) +
geom_line(color = "blue", linewidth = 1) +  # 折線
geom_point(color = "red", size = 2) +
labs(
title = "Total Casualties by Month",
x = "Month of Incident",
y = "Total Casualties"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)+
scale_x_continuous(breaks = 1:12)
# 計算總體的平均數與標準差
overall_stats <- data_clean %>%
summarise(
Group = "Overall",
平均數 = mean(死傷人數, na.rm = TRUE),
標準差 = sd(死傷人數, na.rm = TRUE)
)
# 根據夜間是否等於1來分類，並計算死傷人數的平均數與標準差
grouped_stats <- data_clean %>%
mutate(Night = ifelse(夜間 == 1, "Night", "Day")) %>%
group_by(Night) %>%
summarise(
Group = first(Night),
平均數 = mean(死傷人數, na.rm = TRUE),
標準差 = sd(死傷人數, na.rm = TRUE)
) %>%
ungroup()
# 合併總體與分組統計結果
final_table <- bind_rows(overall_stats, grouped_stats)
final_table <- final_table %>%
select(-c("Night"))
print(final_table)
# 受傷人數簡單回歸
simple_model1 <- lm(受傷人數 ~ 夜間, data = data_clean)
summary(simple_model1)
# 簡單迴歸模型
simple_model <- lm(死傷人數 ~ 夜間, data = data_clean)
summary(simple_model)
# 加入控制變數的多元迴歸模型
multiple_regression <- lm(死傷人數 ~ 夜間+
天候_暴雨+天候_風沙+天候_霧或煙+天候_雨+天候_陰+
市區道路+
路面狀態_冰雪+路面狀態_油滑+路面狀態_泥濘+路面狀態_濕潤
, data = data_clean)
# 控制變數的對照組分別是天候_晴、市區道路以外的道路類型(因為台北大部分都是市區道路)、路面狀態_乾燥
summary(multiple_regression)
install.packages("stargazer")
library(stargazer)
stargazer(simple_model, type = "text")
stargazer(multiple_regression, type = "text")
stargazer(
simple_model,
multiple_regression,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
out.header = TRUE,
style = "default"
)
# latax的table
stargazer(
simple_model,
multiple_regression,
type = "latex",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
out.header = TRUE,
style = "default"
)
install.packages("plm")
library(plm)
data_clean_panel <- pdata.frame(data_clean, index = c("區序數字", "發生月"))
fixed_effect_plm <- plm(
死傷人數 ~ 夜間 +
天候_暴雨 + 天候_風沙 + 天候_霧或煙 + 天候_雨 + 天候_陰 +
市區道路 +
路面狀態_冰雪 + 路面狀態_油滑 + 路面狀態_泥濘 + 路面狀態_濕潤,
data = data_clean_panel,
model = "within",
)
summary(fixed_effect_plm)
stargazer(
simple_model,
multiple_regression,
fixed_effect_plm,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
add.lines = list(
c("region FE", "N", "N", "Y"),
c("month FE", "N", "N", "Y")
),
out.header = TRUE,
style = "default"
)
#read data
install.packages("readxl")
library(readxl)
file_path <- "/Users/coco/Desktop/台大計量/term paper/raw/112.xlsx"
data <- read_excel(file_path)
#examine data
str(data) # 查看資料結構
summary(data) # 快速了解每欄資料的狀況
colSums(is.na(data)) # 計算每欄的 NA 數量
#examine data
install.packages("dplyr")
library(dplyr)
any(duplicated(data))# 確認是否有重複的行
duplicated_rows <- data[duplicated(data), ]# 找到重複的行（除了第一次出現的，後續重複的部分）
print(duplicated_rows)# 查看重複的行
#create sample for analysis
data_select <- select(data, "發生月", "發生日", "發生時-Hours", "區序", "死亡人數", "受傷人數",
"天候","道路類別", "路面狀況2")
# 選擇我想要的欄位
colSums(is.na(data_select)) # 檢查每個欄位的缺失值數量
install.packages("tidyr")
library(tidyr)
data_clean <- data_select%>% drop_na() #移除有缺失值的資料列
sum(is.na(data_clean)) # 結果應該是0
summary(data_clean)
data_clean$區序數字 <- as.numeric(gsub("\\D", "", data_clean$區序))# 提取區序中的數字部分並轉換為數值
head(data_clean$區序數字)  # 查看提取的數字部分
str(data_clean$區序數字)   # 確認資料型別是否為數值
data_clean <- data_clean %>% filter(天候 != 9) # 將資料中亂填的數字刪掉（正常只有1~8）
data_clean$天候 <- as.factor(data_clean$天候) # 確保"天候"是factor類型
# 定義對應的名稱
weather_labels <- c(
"1" = "天候_暴雨",
"2" = "天候_強風",
"3" = "天候_風沙",
"4" = "天候_霧或煙",
"5" = "天候_雪",
"6" = "天候_雨",
"7" = "天候_陰",
"8" = "天候_晴"
)
# 自動生成虛擬變數並重新命名
for (val in names(weather_labels)) {
col_name <- weather_labels[val]  # 對應的名稱
data_clean[[col_name]] <- ifelse(data_clean$天候 == val, 1, 0)  # 生成虛擬變數
}
data_clean$死傷人數 <- data_clean$死亡人數 + data_clean$受傷人數 # 新增欄位 "死傷人數"
table(data$道路類別) # 查看各種道路的分佈數量
# 生成虛擬變數
data_clean <- data_clean %>%
mutate(市區道路 = ifelse(道路類別 == 5, 1, 0))
table(data_clean$市區道路)
data_clean$路面狀況2 <- as.factor(data_clean$路面狀況2) # 確保 "路面狀況2" 是 factor 類型
# 定義對應的名稱
surface_labels <- c(
"1" = "路面狀態_冰雪",
"2" = "路面狀態_油滑",
"3" = "路面狀態_泥濘",
"4" = "路面狀態_濕潤",
"5" = "路面狀態_乾燥"
)
# 自動生成虛擬變數並重新命名
for (val in names(surface_labels)) {
col_name <- surface_labels[val]  # 對應的名稱
data_clean[[col_name]] <- ifelse(data_clean$路面狀況2 == val, 1, 0)  # 生成虛擬變數
}
# 確保"發生時-Hours"是數值型資料
data_clean$`發生時-Hours` <- as.numeric(data_clean$`發生時-Hours`)
# 生成虛擬變數
data_clean$夜間 <- ifelse(data_clean$`發生時-Hours` >= 0 & data_clean$`發生時-Hours` <= 3 |
data_clean$`發生時-Hours` >= 20 & data_clean$`發生時-Hours` <= 24, 1, 0)
# 刪除不必要的欄位
data_clean <- data_clean %>%
select(-c("天候", "道路類別", "路面狀況2"))
# 查看1~12月死傷人數的平均值
data_clean %>%
group_by(發生月) %>%
summarise(平均死傷人數 = mean(死傷人數, na.rm = TRUE))
head(data_clean) #列出所有欄位的名稱，確認資料清理的結果
#Visualize Data
install.packages("ggplot2")
library(ggplot2)
# 依據發生時-Hours分組計算死傷人數總和
hourly_data <- data_clean %>%
group_by(`發生時-Hours`) %>%
summarise(死傷人數總和 = sum(死傷人數, na.rm = TRUE))
# 繪製折線圖
ggplot(hourly_data, aes(x = `發生時-Hours`, y = 死傷人數總和)) +
geom_line(color = "blue", linewidth = 1) +
geom_point(color = "red", size = 2) +
labs(
title = "Total Casualties by Hours of Incident",
x = "Hours of Incident",
y = "Total Casualties"
) +
theme_minimal() +
scale_x_continuous(breaks = 0:24)
# 計算夜間與非夜間的傷亡人數總和
nighttime_data <- data_clean %>%
group_by(夜間) %>%
summarise(Average_Casualties = mean(死傷人數, na.rm = TRUE))
# 繪製夜間與日間直方圖
ggplot(nighttime_data, aes(x = as.factor(夜間), y = Average_Casualties, fill = as.factor(夜間))) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Average Casualties by Nighttime",
x = "Nighttime (1 = Yes, 0 = No)",
y = "Average Casualties",
fill = "Nighttime"
) +
theme_minimal() +
scale_fill_manual(values = c("0" = "skyblue", "1" = "darkblue"),
labels = c("0" = "Daytime", "1" = "Nighttime"))
# 確保 '發生月' 為數值型別
data_clean$發生月 <- as.numeric(data_clean$發生月)
# 計算每月死傷人數總和
monthly_data <- data_clean %>%
group_by(發生月) %>%
summarise(total_casualties = sum(死傷人數, na.rm = TRUE))
# 繪製每月折線圖
ggplot(monthly_data, aes(x = 發生月, y = total_casualties)) +
geom_line(color = "blue", linewidth = 1) +  # 折線
geom_point(color = "red", size = 2) +
labs(
title = "Total Casualties by Month",
x = "Month of Incident",
y = "Total Casualties"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)+
scale_x_continuous(breaks = 1:12)
# 計算總體的平均數與標準差
overall_stats <- data_clean %>%
summarise(
Group = "Overall",
平均數 = mean(死傷人數, na.rm = TRUE),
標準差 = sd(死傷人數, na.rm = TRUE)
)
# 根據夜間是否等於1來分類，並計算死傷人數的平均數與標準差
grouped_stats <- data_clean %>%
mutate(Night = ifelse(夜間 == 1, "Night", "Day")) %>%
group_by(Night) %>%
summarise(
Group = first(Night),
平均數 = mean(死傷人數, na.rm = TRUE),
標準差 = sd(死傷人數, na.rm = TRUE)
) %>%
ungroup()
# 合併總體與分組統計結果
final_table <- bind_rows(overall_stats, grouped_stats)
final_table <- final_table %>%
select(-c("Night"))
print(final_table)
# 受傷人數簡單回歸
simple_model1 <- lm(受傷人數 ~ 夜間, data = data_clean)
summary(simple_model1)
# 簡單迴歸模型
simple_model <- lm(死傷人數 ~ 夜間, data = data_clean)
summary(simple_model)
# 加入控制變數的多元迴歸模型
multiple_regression <- lm(死傷人數 ~ 夜間+
天候_暴雨+天候_風沙+天候_霧或煙+天候_雨+天候_陰+
市區道路+
路面狀態_冰雪+路面狀態_油滑+路面狀態_泥濘+路面狀態_濕潤
, data = data_clean)
# 控制變數的對照組分別是天候_晴、市區道路以外的道路類型(因為台北大部分都是市區道路)、路面狀態_乾燥
summary(multiple_regression)
install.packages("stargazer")
library(stargazer)
stargazer(simple_model, type = "text")
stargazer(multiple_regression, type = "text")
stargazer(
simple_model,
multiple_regression,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
out.header = TRUE,
style = "default"
)
# latax的table
stargazer(
simple_model,
multiple_regression,
type = "latex",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
out.header = TRUE,
style = "default"
)
install.packages("plm")
library(plm)
data_clean_panel <- pdata.frame(data_clean, index = c("區序數字", "發生月"))
fixed_effect_plm <- plm(
死傷人數 ~ 夜間 +
天候_暴雨 + 天候_風沙 + 天候_霧或煙 + 天候_雨 + 天候_陰 +
市區道路 +
路面狀態_冰雪 + 路面狀態_油滑 + 路面狀態_泥濘 + 路面狀態_濕潤,
data = data_clean_panel,
model = "within",
)
summary(fixed_effect_plm)
stargazer(
simple_model,
multiple_regression,
fixed_effect_plm,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
add.lines = list(
c("region FE", "N", "N", "Y"),
c("month FE", "N", "N", "Y")
),
out.header = TRUE,
style = "default"
)
# 穩健性測試
# 穩健性測試
data_clean <- data_clean %>%
mutate(
夜間1 = ifelse(`發生時-Hours` >= 20 | `發生時-Hours` <= 4, 1, 0),  # 夜間1：晚上8點到凌晨4點
夜間2 = ifelse(`發生時-Hours` >= 19 | `發生時-Hours` <= 3, 1, 0)   # 夜間2：晚上7點到凌晨3點
)
View(data_clean)
multiple_regression_night1 <- lm(死傷人數 ~ 夜間1 +
天候_暴雨 + 天候_風沙 + 天候_霧或煙 + 天候_雨 + 天候_陰 +
市區道路 +
路面狀態_冰雪 + 路面狀態_油滑 + 路面狀態_泥濘 + 路面狀態_濕潤,
data = data_clean)
summary(multiple_regression_night1)
multiple_regression_night2 <- lm(死傷人數 ~ 夜間2 +
天候_暴雨 + 天候_風沙 + 天候_霧或煙 + 天候_雨 + 天候_陰 +
市區道路 +
路面狀態_冰雪 + 路面狀態_油滑 + 路面狀態_泥濘 + 路面狀態_濕潤,
data = data_clean)
summary(multiple_regression_night2)
data_clean_panel <- pdata.frame(data_clean, index = c("區序數字", "發生月"))
View(data_clean_panel)
fixed_effect_plm1 <- plm(
死傷人數 ~ 夜間1 +
天候_暴雨 + 天候_風沙 + 天候_霧或煙 + 天候_雨 + 天候_陰 +
市區道路 +
路面狀態_冰雪 + 路面狀態_油滑 + 路面狀態_泥濘 + 路面狀態_濕潤,
data = data_clean_panel,
model = "within",
)
summary(fixed_effect_plm)
fixed_effect_plm2 <- plm(
死傷人數 ~ 夜間2 +
天候_暴雨 + 天候_風沙 + 天候_霧或煙 + 天候_雨 + 天候_陰 +
市區道路 +
路面狀態_冰雪 + 路面狀態_油滑 + 路面狀態_泥濘 + 路面狀態_濕潤,
data = data_clean_panel,
model = "within",
)
summary(fixed_effect_plm)
summary(fixed_effect_plm1)
summary(fixed_effect_plm2)
stargazer(
fixed_effect_plm,
fixed_effect_plm1,
fixed_effect_plm2,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
add.lines = list(
c("region FE", "N", "N", "Y"),
c("month FE", "N", "N", "Y")
),
out.header = TRUE,
style = "default"
)
stargazer(
fixed_effect_plm,
fixed_effect_plm1,
fixed_effect_plm2,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
add.lines = list(
c("region FE", "Y", "Y", "Y"),
c("month FE", "Y", "Y", "Y")
),
out.header = TRUE,
style = "default"
)
stargazer(
fixed_effect_plm,
fixed_effect_plm1,
fixed_effect_plm2,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
keep = c("夜間", "夜間1","夜間2"),
add.lines = list(
c("region FE", "Y", "Y", "Y"),
c("month FE", "Y", "Y", "Y")
),
out.header = TRUE,
style = "default"
)
stargazer(
fixed_effect_plm,
fixed_effect_plm1,
fixed_effect_plm2,
type = "latex",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
keep = c("夜間", "夜間1","夜間2"),
add.lines = list(
c("region FE", "Y", "Y", "Y"),
c("month FE", "Y", "Y", "Y")
),
out.header = TRUE,
style = "default"
)
stargazer(
simple_model,
multiple_regression,
fixed_effect_plm,
type = "latex",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
add.lines = list(
c("region FE", "N", "N", "Y"),
c("month FE", "N", "N", "Y")
),
out.header = TRUE,
style = "default"
)
stargazer(
fixed_effect_plm,
fixed_effect_plm1,
fixed_effect_plm2,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
keep = c("夜間", "夜間1","夜間2"),
add.lines = list(
c("region FE", "Y", "Y", "Y"),
c("month FE", "Y", "Y", "Y")
),
out.header = TRUE,
style = "default"
)
stargazer(
fixed_effect_plm,
fixed_effect_plm1,
fixed_effect_plm2,
type = "latex",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
keep = c("夜間", "夜間1","夜間2"),
add.lines = list(
c("region FE", "Y", "Y", "Y"),
c("month FE", "Y", "Y", "Y")
),
out.header = TRUE,
style = "default"
)
stargazer(
simple_model,
multiple_regression,
fixed_effect_plm,
type = "text",
title = "Result",
dep.var.labels = "死傷人數",
covariate.labels = c("夜間"),
add.lines = list(
c("region FE", "N", "N", "Y"),
c("month FE", "N", "N", "Y")
),
out.header = TRUE,
style = "default"
)
